name: CI
on: [push, pull_request]
jobs:
  build:
    name: Exist ${{ matrix.exist-version }} (Java ${{ matrix.java-version }}) build and test
    strategy:
      fail-fast: false
      matrix:
        exist-version: [latest, 6.2.0]
        java-version: ['8', '21']
        os: [ubuntu-latest]
        exclude:
           - exist-version: 6.2.0
             java-version: 21
           - exist-version: latest
             java-version: 8

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          cache: maven
          java-version: ${{ matrix.java-version }}
      - name: Install Test Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bats

      - name: Maven Build
        run: mvn clean package

      - name: set min templating version from pom
        run: |
          echo "TEMPLATING_VERSION=$(mvn help:evaluate -Dexpression=templating.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Add expath dependencies
        working-directory: target
        run: |
          wget http://exist-db.org/exist/apps/public-repo/public/templating-${{ env.TEMPLATING_VERSION }}.xar -O 001.xar


      # Install
      - name: Start exist-ci containers
        run: |
          docker run -dit -p 8080:8080 -v ${{ github.workspace }}/target:/exist/autodeploy \
          --name exist --rm --health-interval=1s --health-start-period=1s \
          duncdrum/existdb:${{ matrix.exist-version }}
      
      - name: wait for install to finish
        timeout-minutes: 5
        run: |
          while ! docker logs exist | grep -q "Server has started"; \
          do sleep 4s; \
          done

      # Test
      - name: Run smoke test
        run: bats --tap src/test/bats/*.bats

      - name: Run e2e test
        run: npx cypress run

      # - name: Test
      #   env:
      #     CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      #   run: mvn verify
